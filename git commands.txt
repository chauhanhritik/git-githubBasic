git commit -a -m "message here" --> skips the staging area and commits the files directly(git add not needed to track the files). For this to work, the file should atleast be tracked once, only then it can be committed directly after being modified.

git rm filename --> removes the file from the current wworking directory and staging area

git rm --cached filename --> removes the file from the staging area only and not from the current directory


git checkout --> reverts the files to last staged version

git checkout -f --> reverts the file to last commited version

git diff --> compares the "current working tree" with the "last staged area"

git diff --staged --> compares staging area with the last commit

git log --> shows the history of commits
git log -p -n --> shows last "n" no of commits made with "diff" output

git status -s --> shows a very short summary of modified, staged  and untracked files, and shows nothing if the tree is clean.

git remote --> shows remote repos
git remote -v --> url of remote repos

git push origin master --> push the master branch into remote repo ORIGIN


//Authentication here done using SSH keys
Generating SSH keys-
1. ssh-keygen -t ed25519 -C "email@gmail.com"
2. eval "$(ssh-agent -s)"
3. ssh-add ~/.ssh/id_ed25519

the key has been generated after this. Now that key must be deployed to github account
4. cat ~/.ssh/id_ed25519.pub --> shows the rsa key
